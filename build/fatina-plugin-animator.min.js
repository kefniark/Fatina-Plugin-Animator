!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("FatinaPluginAnimator",[],e):"object"==typeof exports?exports.FatinaPluginAnimator=e():t.FatinaPluginAnimator=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.TickerManager=class{constructor(t){this.tickers={},this.plugin=t}get(t){return this.tickers[t]?this.tickers[t]:(this.tickers[t]=this.plugin.fatina.ticker(),this.tickers[t])}pauseAll(t){this.tickers[t]&&this.tickers[t].pause()}resumeAll(t){this.tickers[t]&&this.tickers[t].resume()}killAll(t){this.tickers[t]&&(this.tickers[t].kill(),delete this.tickers[t])}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Animator=class{constructor(t,e){this.animations={},this.current={},this.groups=["default"],this.currentAnimName={},this.animGroupMap={},this.animTransitionMap={},this.animFinalValueMap={},this.animUnstoppableMap={},this.eventStart={},this.eventOnceStart={},this.eventComplete={},this.eventOnceComplete={},this.object=t,this.animatorManager=e}addAnimation(t,e,i,n){const s=this.animatorManager.instantiate(e,this.object,n);return this.addCustomAnimation(t,i||{},s)}addCustomAnimation(t,e,i){const n=i;return n.onStart(()=>{this.emitEvent(this.eventStart[t]),t in this.eventOnceStart&&(this.emitEvent(this.eventOnceStart[t]),this.eventOnceStart[t]=[])}),n.onKilled(()=>{n.recycle(),this.emitEvent(this.eventComplete[t]),t in this.eventOnceComplete&&(this.emitEvent(this.eventOnceComplete[t]),this.eventOnceComplete[t]=[])}),n.onComplete(()=>{n.recycle(),this.emitEvent(this.eventComplete[t]),t in this.eventOnceComplete&&(this.emitEvent(this.eventOnceComplete[t]),this.eventOnceComplete[t]=[]),t in this.animTransitionMap&&this.play(this.animTransitionMap[t])}),this.animations[t]=n,this.animFinalValueMap[t]=!!e&&!!e.finalValue,this.animUnstoppableMap[t]=!!e&&!!e.unstoppable,this.animGroupMap[t]=e&&e.group?e.group:"default",e&&e.next&&(this.animTransitionMap[t]=e.next),-1===this.groups.indexOf(this.animGroupMap[t])&&this.groups.push(this.animGroupMap[t]),this}emit(t,e){try{t.apply(this,e)}catch(t){console.warn(t)}}emitEvent(t,e){if(t)for(let i=0;i<t.length;i++)this.emit(t[i],e)}onStartAll(t,e){return t in this.eventStart?this.eventStart[t].push(e):this.eventStart[t]=[e],this}onStart(t,e){return t in this.eventOnceStart?this.eventOnceStart[t].push(e):this.eventOnceStart[t]=[e],this}onCompleteAll(t,e){return t in this.eventComplete?this.eventComplete[t].push(e):this.eventComplete[t]=[e],this}onComplete(t,e){return t in this.eventOnceComplete?this.eventOnceComplete[t].push(e):this.eventOnceComplete[t]=[e],this}play(t,e){if(!(t in this.animations))throw new Error("this animation doesnt exist "+t);const i=this.animGroupMap[t];let n=this.current[i];if(n&&n.isRunning&&this.animUnstoppableMap[this.currentAnimName[i]])console.log("This animation already run and is unstoppable",this.currentAnimName[i],"->",t);else{if(n&&(n.isRunning||n.isPaused)){const t=this.currentAnimName[i];n.skip(this.animFinalValueMap[t]),this.current[i]=void 0}n=this.animations[t],this.current[i]=n,this.currentAnimName[i]=t,e&&this.onComplete(t,e),n.start()}}pause(t){const e=t||"default",i=this.current[e];i&&i.isRunning&&i.pause()}pauseAll(){for(const t of this.groups)this.pause(t)}resume(t){const e=t||"default",i=this.current[e];i&&i.isPaused&&i.resume()}resumeAll(){for(const t of this.groups)this.resume(t)}stop(t){const e=t||"default",i=this.current[e];if(i&&!i.isFinished){const t=this.currentAnimName[e];i.skip(this.animFinalValueMap[t]),this.current[e]=void 0}}stopAll(){for(const t of this.groups)this.stop(t)}destroy(){for(const t of this.groups){const e=this.current[t];e&&!e.isFinished&&e.kill()}this.animations={},this.animGroupMap={},this.animFinalValueMap={},this.animUnstoppableMap={},this.current={},this.currentAnimName={},delete this.object.animator}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=i(1);e.AnimatorManager=class{constructor(t){this.anims={},this.tickerMap={},this.plugin=t}get animations(){return Object.keys(this.anims)}get labels(){return Object.keys(this.tickerMap).map(t=>this.tickerMap[t]).filter((t,e,i)=>i.indexOf(t)===e)}register(t,e,i){return this.anims[t]&&this.tickerMap[t]&&delete this.tickerMap[t],this.anims[t]=e,i&&(this.tickerMap[t]=i),this}instantiate(t,e,i){if(!(t in this.anims))throw new Error("this animation doesnt exist "+t);const n=this.anims[t](e,i);return this.tickerMap[t]&&n.setParent(this.plugin.tickerManager.get(this.tickerMap[t])),n}addAnimatorTo(t){return t.animator||(t.animator=new n.Animator(t,this)),t.animator}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),s=i(0);e.get=function(){return new r};class r{constructor(){this.name="fatina-plugin-animator",this.initialized=!1}get tickerManager(){return this.fatina.plugin.tickerManager}get animatorManager(){return this.fatina.plugin.animatorManager}init(t){if(this.initialized)throw new Error("Try to init the plugin twice : "+name);if(void 0===t||null===t||null===t.plugin)throw new Error("Try to init the plugin without fatina : "+name);this.fatina=t,this.initialized=!0,t.plugin.animatorManager=new n.AnimatorManager(this),t.plugin.tickerManager=new s.TickerManager(this)}}e.FatinaPluginAnimator=r}])});